version: '3.2'

services:
  vote:
    image: fandijunerry/votingapp_vote:latest
    depends_on:
      - redis
    volumes:
     - ./vote:/app
    ports:
      - "5000:80"
    networks:
      - front-tier
      - back-tier
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  result:
    image: fandijunerry/votingapp_result:latest
    depends_on:
      - db
    volumes:
      - ./result:/app
    ports:
      - "5001:80"
    networks:
      - front-tier
      - back-tier
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  worker:
    image: fandijunerry/votingapp_worker:latest
    depends_on:
      - redis
      - db
    networks:
      - back-tier
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis:
    image: fandijunerry/votingapp_redishc:latest
    healthcheck:
      test: /healthcheck/redis-hc.sh
      interval: "5s"
    networks:
      - back-tier
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    
  db:
    image: fandijunerry/votingapp_postgreshc:latest
    secrets:
      - db_user
      - db_pass
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_pass
    volumes:
      - "db-data:/var/lib/postgresql/data"
    healthcheck:
      test: /healthcheck/pg-hc.sh
      interval: "5s"
    networks:
      - back-tier
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        window: 15m

volumes:
  db-data:

networks:
  front-tier:
    driver: overlay
    attachable: true
  back-tier:
    driver: overlay
    attachable: true

secrets:
  db_user:
    file: ./db_user.txt
  db_pass:
    file: ./db_pass.txt
