version: '3.8'

services:
  vote:
    image: runninginlocal_vote:latest
    command: python app.py
    depends_on:
      - redis
        #condition: service_healthy
    volumes:
     - ./vote:/app
    ports:
      - "5000:80"
    networks:
      - front-tier
      - back-tier

  result:
    image: runninginlocal_result:latest
    depends_on:
      - db
        #condition: service_healthy
    volumes:
      - ./result:/app
    ports:
      - "5001:80"
      - "5858:5858"
    networks:
      - front-tier
      - back-tier

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    image: runninginlocal_worker:latest
    depends_on:
      - redis
        #condition: service_healthy
      - db
        #condition: service_healthy
    networks:
      - back-tier

  redis:
    image: redis:5.0-alpine3.10
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    ports: ["6379"]
    networks:
      - back-tier

  db:
    image: postgres:9.4
    secrets:
      - psql_user
      - psql_pass
    environment:
      POSTGRES_USER_FILE: /run/secrets/psql_user
      POSTGRES_PASSWORD_FILE: /run/secrets/psql_pass
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier

secrets:
  psql_user:
    external: true
  psql_pass:
    external: true
volumes:
  db-data:

networks:
  front-tier:
  back-tier:
